let NonEmpty = https://prelude.dhall-lang.org/NonEmpty/Type.dhall

let Strategy = ../Strategy/Type

let Grid = ./Grid
let GridBuilder = ./GridBuilder

let subset1
      : forall (a : Type)
     -> Double -> NonEmpty a -> (NonEmpty a -> Grid) -> Grid
      = \(a : Type)
     -> \(p : Double)
     -> \(xs : NonEmpty a)
     -> \(cont : NonEmpty a -> Grid)
     -> \(_Grid : Type)
     -> \(gridBuilder : GridBuilder _Grid)
     -> let adapt
              : Grid -> _Grid
              = \(g : Grid)
             -> g _Grid gridBuilder
        in gridBuilder.subset1 a
            { p, xs, cont = \(ys : NonEmpty a) -> adapt (cont ys) }

in subset1
