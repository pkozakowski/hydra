let Instrument = ../Instrument/Type

let Grid = ./Grid
let GridBuilder = ./GridBuilder

let subset
      : forall (a : Type) -> Double -> List a -> (List a -> Grid) -> Grid
      = \(a : Type)
     -> \(p : Double)
     -> \(xs : List a)
     -> \(cont : List a -> Grid)
     -> \(_Grid : Type)
     -> \(gridBuilder : GridBuilder _Grid)
     -> let adapt
              : Grid -> _Grid
              = \(g : Grid)
             -> g _Grid gridBuilder
        in gridBuilder.subset a
            { p, xs, cont = \(ys : List a) -> adapt (cont ys) }

in subset
